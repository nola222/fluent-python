# -*- coding: utf-8 -*-
# Nola
"""
    dict的实现及其导致的结果
    散列表给dict带来的优势和限制：
        - 1.键必须是可散列的
        - 2.字典在内存上的开销巨大
            若簇拥存放数量巨大的记录，放在有元组或具名元组构成的列表中会是比较好的选择，避免散列表所耗费的空间
        - 3.键查询很快
            dict实现的是典型的空间换时间：字典类型有着巨大的内存开销，但它们提供了无视数据量大小的快速访问——只要字典能被装在内存里。
        - 4.键的次序取决于添加顺序
            虽然键的次序是乱的，字典仍然被视作是相等的
        - 5.往字典里添加新键可能会改变已有键的顺序

    Python3中，.keys()、.items()和.values()方法返回的是字典的视图，返回值更像集合，而不像Python2返回列表。
"""